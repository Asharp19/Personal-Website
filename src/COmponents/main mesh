
              precision mediump float;
              varying vec3 vPosition;
              uniform vec3 uColor;
              uniform float uTime;
              uniform sampler2D uTexture;


              #pragma glslify: snoise3 = require(glsl-noise/simplex/3d.glsl);
              
              varying vec2 vUv;
              varying float vWave;

              float lines(vec2 uv,float offset){
                return smoothstep(
                    0.,0.5+offset*0.5,
                    abs(0.5*(sin(uv.x*20.)+offset*2.0))
                );
                
              }
              
              mat2 rotate2D(float angle){
                return mat2(
                    cos(angle), -sin(angle),
                    sin(angle),cos(angle));
                }
          
              void main() {
                vec3 color1= vec3(0.607843,0.843137,1.0);
                vec3 color2= vec3(1.,0.941176,0.901960);
                vec3 color3= vec3(0.352941,0.705882,0.925490);
                float n=snoise3(vPosition+uTime*0.1);

                

                vec2 baseUV=rotate2D(n)*vPosition.xy*0.2;
                float basePattern=lines(baseUV, 0.5);
                float secondPattern=lines(baseUV, 0.1);
                
                vec3 bColor= mix(color1,color2,basePattern);
                vec3 sColor= mix(bColor,color3,secondPattern);
                
                gl_FragColor = vec4(vec3(sColor),1.0); 


                (0.81176,0.63529,0.25098)